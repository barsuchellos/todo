{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { TodoTaskComponent } from \"../todo-task/todo-task.component\";\nimport { TodoService } from \"src/app/service/todo.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ToDoComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction ToDoComponent_ng_template_8_todo_task_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"todo-task\", 10);\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"Goal\", item_r6);\n  }\n}\nfunction ToDoComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 8);\n    i0.ɵɵtemplate(1, ToDoComponent_ng_template_8_todo_task_1_Template, 1, 1, \"todo-task\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.list);\n  }\n}\nfunction ToDoComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1, \"Empty List\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ToDoComponent = /*#__PURE__*/(() => {\n  class ToDoComponent {\n    text = \"\";\n    list = [];\n    todoService = inject(TodoService);\n    condition = false;\n    constructor() {\n      this.list = this.todoService.getList();\n      this.condition = this.todoService.isList();\n    }\n    addGoal(text) {\n      if (text.length) {\n        this.todoService.addGoal(text);\n        this.text = \"\";\n        this.condition = this.todoService.isList();\n      }\n    }\n    isList() {\n      return this.list.length ? true : false;\n    }\n    static ɵfac = function ToDoComponent_Factory(t) {\n      return new (t || ToDoComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ToDoComponent,\n      selectors: [[\"todo\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 12,\n      vars: 4,\n      consts: [[1, \"container\", \"bg-light\", \"p-4\"], [1, \"form-label\", \"mb-4\", \"text-center\"], [\"type\", \"string\", 1, \"form-control\", \"mb-4\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-control\", \"btn\", \"btn-secondary\", \"btn-lg\", \"btn-block\", 3, \"click\"], [\"class\", \"container bg-light mt-4\", 4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"List\", \"\"], [\"EmptyList\", \"\"], [1, \"container\", \"bg-light\", \"mt-4\"], [1, \"list-group\", \"list-group-flush\", \"pt-4\"], [3, \"Goal\", 4, \"ngFor\", \"ngForOf\"], [3, \"Goal\"], [1, \"m-4\", \"text-center\"]],\n      template: function ToDoComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n          i0.ɵɵtext(2, \"List:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function ToDoComponent_Template_input_ngModelChange_3_listener($event) {\n            return ctx.text = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function ToDoComponent_Template_button_click_4_listener() {\n            return ctx.addGoal(ctx.text);\n          });\n          i0.ɵɵtext(5, \" Add \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"br\");\n          i0.ɵɵtemplate(7, ToDoComponent_div_7_Template, 1, 0, \"div\", 4)(8, ToDoComponent_ng_template_8_Template, 2, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor)(10, ToDoComponent_ng_template_10_Template, 2, 0, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const _r2 = i0.ɵɵreference(9);\n          const _r4 = i0.ɵɵreference(11);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.text);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.condition)(\"ngIfThen\", _r2)(\"ngIfElse\", _r4);\n        }\n      },\n      dependencies: [FormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, CommonModule, i2.NgForOf, i2.NgIf, TodoTaskComponent],\n      encapsulation: 2\n    });\n  }\n  return ToDoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}